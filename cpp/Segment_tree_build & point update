#include <bits/stdc++.h>
#define fio ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
#define ll long long
#define ld long double
#define eb emplace_back
#define pb push_back
#define all(x) (x).begin(), (x).end()
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
const int mod=1000000007;
using namespace std;

void build(int ind, int low, int high, vector<int> &arr, vector<int> &seg, int orr){
    if(low==high){
        seg[ind] = arr[low];
        return;
    }

    int mid = (low+high)/2;
    build(2*ind+1,low,mid,arr,seg,!orr);
    build(2*ind+2,mid+1,high,arr,seg,!orr);
    if(orr) seg[ind] = seg[2*ind+1]|seg[2*ind+2];
    else seg[ind] = seg[2*ind+1]^seg[2*ind+2];

}
void update(int ind, int low, int high, vector<int> &seg,int orr, int i, int val){
    if(low==high){
        seg[ind] = val;
        return;
    }
    int mid = (low+high)/2;
    if(i<=mid) update(2*ind+1,low,mid,seg,!orr,i,val);
    else update(2*ind+2,mid+1,high,seg,!orr,i,val);
    if(orr) seg[ind] = seg[2*ind+1]|seg[2*ind+2];
    else seg[ind] = seg[2*ind+1]^seg[2*ind+2];
}

void solve(){
    int n,q;
    cin >> n >> q;
    int el = pow(2,n);
    vector<int> arr(el);
    for(int i=0;i<el;i++){
        cin >> arr[i];
    }
    vector<int> seg(4*el);
    if(n%2) build(0,0,el-1,arr,seg,1);
    else build(0,0,el-1,arr,seg,0);

    while(q--){
        int i,val;
        cin >> i >> val;
        i--;
        if(n%2) update(0,0,el-1,seg,1,i,val);
        else update(0,0,el-1,seg,0,i,val);
        cout << seg[0] << endl;
        
    }


}

int main() {
    fio;
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r",stdin);
    freopen("output.txt", "w",stdout);
    #endif
    int t=1;
    // cin >> t;
    for(int i=0;i<t;i++){
        solve();
    }
	return 0;
}
